{"version":3,"file":"static/js/567.d37d9d60.chunk.js","mappings":"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","sources":["ApiFetch.jsx","page/Home/Home.styled.jsx","page/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL ='https://api.themoviedb.org/3';\naxios.defaults.params = {\n    api_key: 'd3ed4ffb60d13827c3ec286dc736d3f2',\n    include_adult: false,\n};\n// https://image.tmdb.org/t/p/w500/kqjL17yufvn9OVLyXYpvtyrFfak.jpg\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n\nexport const fetchTrending = async ()=> {\nreturn axios.get('/trending/all/day?')\n.then(({data: {results}})=>\nresults.map(({id, title,poster_path:poster})=>\n({ id, title, poster:IMG_URL+ poster,}\n)\n)).catch(error => {console.log(error.message); })\n\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport const fetchMovieDetail = movieId => {\n    return axios.get(`/movie/${movieId}?`).then(\n({ data: {\n    id,\n    poster_path: poster,\n    title,\n    release_date: releaseYear,\n    vote_average: userScore,\n    overview,\n    genres,\n  },}) => ({id, poster: IMG_URL + poster,\n    title,\n    releaseYear: new Date(releaseYear).getFullYear(),\n    userScore: Math.round(userScore * 10),\n    overview,\n    genres,\n\n  })\n    ).catch(error => {console.log(error.message)}\n)};\n\n// https://api.themoviedb.org/3/search/movie?\nexport const fetchQuerySerch = async query=> {\nreturn axios.get(`/search/movie?query=${query}`).then(({ data: { results } }) =>\nresults.map(({ id, title, poster_path: poster }) => ({\n  id,\n  title,\n  poster: IMG_URL + poster,\n}))).catch(error => {console.log(error.message )}) \n\n};\n// Get the cast and crew for a movie.\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n\nexport const fetchCast = movieId =>{\n    return axios.get(`/movie/${movieId}/credits?`).then(({data: {cast}})=>\n    cast.map(({id, name, character, profile_path: photo})=>\n    ({id, name, character, photo: IMG_URL + photo,}))\n    ).catch(error => {console.log(error.message)}) \n} ;\n\n// Get the user reviews for a movie.\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\nexport const fetchReviews = movieId => {\nreturn axios.get(`/movie/${movieId}/reviews?`).then(({data: {results}})=>\nresults.map(({id, author, content})=>({id, author, content }) )\n).catch(error => {console.log(error.message)}) \n\n};","import styled from 'styled-components';\n\nexport const HomeContainer = styled.ul`\ndisplay: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n    grid-gap: 5px;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n    `\n\nexport const MovieItem = styled.li`\n    background: rgb(255, 255, 255);\n    box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n      0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n    width: 100%;\n    max-width: 260px;\n    margin: 10px;\n    border-radius: 5px;\n    display: inline-block;\n    text-decoration: none;\n    color: black;\n    transition-duration: 300ms;\n    &:hover {\n      cursor: pointer;\n      transform: scale(1.03);\n      box-shadow: rgb(0 0 0 / 8%) 0px 10px 25px;\n    }\n  `;\n\nexport const ImgMovie = styled.img`\n  padding: 0px;\n  margin: 0px;\n  height: 300px;\n  width: 100%;\n  display: block;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n`;","import { fetchTrending } from \"ApiFetch\";\nimport { useState,useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport {HomeContainer,MovieItem, ImgMovie} from './Home.styled';\n\nconst Home =()=> {\nconst [movies, setMovies]= useState([]);\nconst location = useLocation();\n\nuseEffect(()=> {\n    fetchTrending().then(setMovies)\n}, [])\n\nreturn(\n<div>\n    <h1>Tranding today</h1>\n    <HomeContainer>\n      {movies.map(({id,title,poster})=> (<MovieItem key={id}>\n        <Link to={`/movies/${id}`} state={{from: location}} >\n          <ImgMovie src={poster} alt={title} />  \n          <div>\n            <h3>{title}</h3>\n          </div>\n        </Link>\n        \n    </MovieItem>)) }\n    </HomeContainer>\n</div>\n\n)\n}\n\nexport default Home;"],"names":["axios","api_key","include_adult","IMG_URL","fetchTrending","then","data","results","map","id","title","poster","poster_path","catch","error","console","log","message","fetchMovieDetail","movieId","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","fetchQuerySerch","query","fetchCast","cast","name","character","photo","profile_path","fetchReviews","author","content","HomeContainer","styled","MovieItem","ImgMovie","useState","movies","setMovies","location","useLocation","useEffect","to","state","from","src","alt"],"sourceRoot":""}