{"version":3,"file":"static/js/907.c8239f0e.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAwB,+BACxBA,EAAAA,EAAAA,SAAAA,OAAwB,CACpBC,QAAS,mCACTC,eAAe,GAGnB,IAAMC,EAAU,kCAGHC,EAAa,mCAAG,uGACtBJ,EAAAA,EAAAA,IAAU,sBAChBK,MAAK,qBAAEC,KAAOC,QACPC,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAkBC,EAAxB,EAAYC,YAAZ,MACX,CAAEH,GAAAA,EAAIC,MAAAA,EAAOC,OAAOR,EAASQ,EADlB,GADN,IAIHE,OAAM,SAAAC,GAAUC,QAAQC,IAAIF,EAAMG,QAAW,KANnB,2CAAH,qDAWbC,EAAmB,SAAAC,GAC5B,OAAOnB,EAAAA,EAAAA,IAAA,iBAAoBmB,EAApB,MAAgCd,MAC3C,oBAAGC,KACCG,EADJ,EACIA,GACaE,EAFjB,EAEIC,YACAF,EAHJ,EAGIA,MACcU,EAJlB,EAIIC,aACcC,EALlB,EAKIC,aACAC,EANJ,EAMIA,SACAC,EAPJ,EAOIA,OAPJ,MAQW,CAAChB,GAAAA,EAAIE,OAAQR,EAAUQ,EAC9BD,MAAAA,EACAU,YAAa,IAAIM,KAAKN,GAAaO,cACnCL,UAAWM,KAAKC,MAAkB,GAAZP,GACtBE,SAAAA,EACAC,OAAAA,EAbJ,IAgBMZ,OAAM,SAAAC,GAAUC,QAAQC,IAAIF,EAAMG,QAAS,GAC/C,EAGWa,EAAe,mCAAG,WAAMC,GAAN,0FACxB/B,EAAAA,EAAAA,IAAA,8BAAiC+B,IAAS1B,MAAK,qBAAGC,KAAQC,QACzDC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAoBC,EAA3B,EAAcC,YAAd,MAAyC,CACnDH,GAAAA,EACAC,MAAAA,EACAC,OAAQR,EAAUQ,EAHR,GAD0C,IAKjDE,OAAM,SAAAC,GAAUC,QAAQC,IAAIF,EAAMG,QAAU,KANlB,2CAAH,sDAYfe,EAAY,SAAAb,GACrB,OAAOnB,EAAAA,EAAAA,IAAA,iBAAoBmB,EAApB,cAAwCd,MAAK,qBAAEC,KAAO2B,KACxDzB,KAAI,gBAAEC,EAAF,EAAEA,GAAIyB,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,UAAyBC,EAArC,EAAuBC,aAAvB,MACR,CAAC5B,GAAAA,EAAIyB,KAAAA,EAAMC,UAAAA,EAAWC,MAAOjC,EAAUiC,EAD/B,GAD2C,IAGlDvB,OAAM,SAAAC,GAAUC,QAAQC,IAAIF,EAAMG,QAAS,GAChD,EAKYqB,EAAe,SAAAnB,GAC5B,OAAOnB,EAAAA,EAAAA,IAAA,iBAAoBmB,EAApB,cAAwCd,MAAK,qBAAEC,KAAOC,QACrDC,KAAI,kBAA0B,CAACC,GAA3B,EAAEA,GAA6B8B,OAA/B,EAAMA,OAAiCC,QAAvC,EAAcA,QAAd,GADwC,IAElD3B,OAAM,SAAAC,GAAUC,QAAQC,IAAIF,EAAMG,QAAS,GAE5C,C,4KCrEYwB,EAAaC,EAAAA,GAAAA,KAAH,0LAUVC,EAAcD,EAAAA,GAAAA,MAAH,2LAWXE,EAAeF,EAAAA,GAAAA,OAAH,uWAiBZG,EAAYH,EAAAA,GAAAA,GAAH,4LAWTI,EAAYJ,EAAAA,GAAAA,GAAH,kUAgBTK,EAAWL,EAAAA,GAAAA,IAAH,+K,SCNrB,EAlDc,WAAK,IAAD,EAClB,GAAuBM,EAAAA,EAAAA,UAAS,IAAhC,eAAOjB,EAAP,KAAakB,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAW,UAAGJ,EAAaK,IAAI,gBAApB,QAAgC,IAEjDC,EAAAA,EAAAA,YAAU,WACNF,IAAe3B,EAAAA,EAAAA,IAAgB2B,GAAapD,KAAK8C,EAClD,GAAE,CAACM,IAEN,IAAMG,EAAY,mCAAG,WAAMC,GAAN,8EACjBA,EAAIC,iBADa,UAGMhC,EAAAA,EAAAA,IAAgBC,GAHtB,OAGXgC,EAHW,OAIjBZ,EAAUY,GACVT,EAAgB,CAACvB,MAAAA,IACjBkB,EAAS,IANQ,2CAAH,sDAgBlB,OACI,iCACA,UAACR,EAAD,CAAYuB,SAAUJ,EAAtB,WACM,SAACjB,EAAD,CAAasB,KAAK,OAAOC,YAAY,2BAA2BC,MAAOpC,EAAOqC,SATnE,SAAAC,GAEjBpB,EAASoB,EAAMC,OAAOH,MAAMI,cAC3B,KAOK,SAAC3B,EAAD,CAAcqB,KAAK,SAAnB,uBAEDf,IACD,SAACL,EAAD,UACGK,EAAO1C,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,OAAd,OACV,SAACmC,EAAD,WACE,UAAC,KAAD,CAAM0B,GAAE,kBAAa/D,GAAMgE,MAAO,CAAEC,KAAMnB,GAA1C,WACE,SAACR,EAAD,CAAU4B,IAAKhE,EAAQiE,IAAKlE,IAC3BA,MAHWD,EADN,QAarB,C","sources":["ApiFetch.jsx","page/Movie/Movie.styled.jsx","page/Movie/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL ='https://api.themoviedb.org/3';\naxios.defaults.params = {\n    api_key: 'd3ed4ffb60d13827c3ec286dc736d3f2',\n    include_adult: false,\n};\n// https://image.tmdb.org/t/p/w500/kqjL17yufvn9OVLyXYpvtyrFfak.jpg\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n\nexport const fetchTrending = async ()=> {\nreturn axios.get('/trending/all/day?')\n.then(({data: {results}})=>\nresults.map(({id, title,poster_path:poster})=>\n({ id, title, poster:IMG_URL+ poster,}\n)\n)).catch(error => {console.log(error.message); })\n\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport const fetchMovieDetail = movieId => {\n    return axios.get(`/movie/${movieId}?`).then(\n({ data: {\n    id,\n    poster_path: poster,\n    title,\n    release_date: releaseYear,\n    vote_average: userScore,\n    overview,\n    genres,\n  },}) => ({id, poster: IMG_URL + poster,\n    title,\n    releaseYear: new Date(releaseYear).getFullYear(),\n    userScore: Math.round(userScore * 10),\n    overview,\n    genres,\n\n  })\n    ).catch(error => {console.log(error.message)}\n)};\n\n// https://api.themoviedb.org/3/search/movie?\nexport const fetchQuerySerch = async query=> {\nreturn axios.get(`/search/movie?query=${query}`).then(({ data: { results } }) =>\nresults.map(({ id, title, poster_path: poster }) => ({\n  id,\n  title,\n  poster: IMG_URL + poster,\n}))).catch(error => {console.log(error.message )}) \n\n};\n// Get the cast and crew for a movie.\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n\nexport const fetchCast = movieId =>{\n    return axios.get(`/movie/${movieId}/credits?`).then(({data: {cast}})=>\n    cast.map(({id, name, character, profile_path: photo})=>\n    ({id, name, character, photo: IMG_URL + photo,}))\n    ).catch(error => {console.log(error.message)}) \n} ;\n\n// Get the user reviews for a movie.\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\nexport const fetchReviews = movieId => {\nreturn axios.get(`/movie/${movieId}/reviews?`).then(({data: {results}})=>\nresults.map(({id, author, content})=>({id, author, content }) )\n).catch(error => {console.log(error.message)}) \n\n};","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n`;\n\nexport const SearchInput = styled.input`\n\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    padding-left: 8px;\n    padding-right: 8px;\n    margin-left: 10px;\n`;\n\nexport const SearchButton = styled.button`\n   display: inline-block;\n    width: 48px;\n    height: 40px;\n    border: 0;\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n    &:hover{\nopacity: 1\n    }\n    `;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  padding: 0;\n`;\n\nexport const MovieItem = styled.li`\n  background: rgb(255, 255, 255);\n  width: 100%;\n  max-width: 200px;\n  margin: 10px;\n  border-radius: 5px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: rgb(0 0 0 / 8%) 0px 10px 25px;\n  }\n`;\n \nexport const MovieImg = styled.img`\n  padding: 0px;\n  margin: 0px;\n  height: 260px;\n  width: 100%;\n  display: block;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n`;\n\n\n\n","import { fetchQuerySerch } from \"ApiFetch\";\nimport { useState, useEffect } from \"react\";\nimport { useLocation, useSearchParams, Link } from \"react-router-dom\";\n\nimport {SearchForm,\n  SearchInput,\n  SearchButton,\n  MovieList,\n  MovieItem,\n  MovieImg} from './Movie.styled';\n\nconst Movies =()=>{\nconst [query,setQuery]=useState('');\nconst [movies, setMovies]=useState([]);\nconst [searchParams, setSearchParams] = useSearchParams('');\nconst location = useLocation();\nconst searchQuery = searchParams.get('query') ?? '';\n\nuseEffect(() => {\n    searchQuery && fetchQuerySerch(searchQuery).then(setMovies);\n  }, [searchQuery]);\n\nconst handleSubmit = async evt => {\n    evt.preventDefault();\n\n    const response = await fetchQuerySerch(query);\n    setMovies(response);\n    setSearchParams({query});\n    setQuery('');\n};\n\n\nconst handleChange = event => {\n\n    setQuery(event.target.value.toLowerCase());\n    };\n\n\nreturn(\n    <> \n    <SearchForm onSubmit={handleSubmit}>\n          <SearchInput type=\"text\" placeholder=\"Please, enter movie name\" value={query} onChange={handleChange} />\n          <SearchButton type=\"submit\">search</SearchButton>\n        </SearchForm>\n        {movies && (\n        <MovieList>\n          {movies.map(({ id, title, poster }) => (\n            <MovieItem key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <MovieImg src={poster} alt={title} />\n                {title}\n              </Link>\n            </MovieItem>\n          ))}\n        </MovieList>\n      )}\n        </>\n)\n\n}\n\nexport default Movies;"],"names":["axios","api_key","include_adult","IMG_URL","fetchTrending","then","data","results","map","id","title","poster","poster_path","catch","error","console","log","message","fetchMovieDetail","movieId","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","fetchQuerySerch","query","fetchCast","cast","name","character","photo","profile_path","fetchReviews","author","content","SearchForm","styled","SearchInput","SearchButton","MovieList","MovieItem","MovieImg","useState","setQuery","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","searchQuery","get","useEffect","handleSubmit","evt","preventDefault","response","onSubmit","type","placeholder","value","onChange","event","target","toLowerCase","to","state","from","src","alt"],"sourceRoot":""}