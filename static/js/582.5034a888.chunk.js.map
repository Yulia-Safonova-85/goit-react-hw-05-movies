{"version":3,"file":"static/js/582.5034a888.chunk.js","mappings":"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","sources":["ApiFetch.jsx","page/MovieDetail/MovieDetails.styled.jsx","page/MovieDetail/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL ='https://api.themoviedb.org/3';\naxios.defaults.params = {\n    api_key: 'd3ed4ffb60d13827c3ec286dc736d3f2',\n    include_adult: false,\n};\n// https://image.tmdb.org/t/p/w500/kqjL17yufvn9OVLyXYpvtyrFfak.jpg\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n\nexport const fetchTrending = async ()=> {\nreturn axios.get('/trending/all/day?')\n.then(({data: {results}})=>\nresults.map(({id, title,poster_path:poster})=>\n({ id, title, poster:IMG_URL+ poster,}\n)\n)).catch(error => {console.log(error.message); })\n\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport const fetchMovieDetail = movieId => {\n    return axios.get(`/movie/${movieId}?`).then(\n({ data: {\n    id,\n    poster_path: poster,\n    title,\n    release_date: releaseYear,\n    vote_average: userScore,\n    overview,\n    genres,\n  },}) => ({id, poster: IMG_URL + poster,\n    title,\n    releaseYear: new Date(releaseYear).getFullYear(),\n    userScore: Math.round(userScore * 10),\n    overview,\n    genres,\n\n  })\n    ).catch(error => {console.log(error.message)}\n)};\n\n// https://api.themoviedb.org/3/search/movie?\nexport const fetchQuerySerch = async query=> {\nreturn axios.get(`/search/movie?query=${query}`).then(({ data: { results } }) =>\nresults.map(({ id, title, poster_path: poster }) => ({\n  id,\n  title,\n  poster: IMG_URL + poster,\n}))).catch(error => {console.log(error.message )}) \n\n};\n// Get the cast and crew for a movie.\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n\nexport const fetchCast = movieId =>{\n    return axios.get(`/movie/${movieId}/credits?`).then(({data: {cast}})=>\n    cast.map(({id, name, character, profile_path: photo})=>\n    ({id, name, character, photo: IMG_URL + photo,}))\n    ).catch(error => {console.log(error.message)}) \n} ;\n\n// Get the user reviews for a movie.\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\nexport const fetchReviews = movieId => {\nreturn axios.get(`/movie/${movieId}/reviews?`).then(({data: {results}})=>\nresults.map(({id, author, content})=>({id, author, content }) )\n).catch(error => {console.log(error.message)}) \n\n};","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  padding: 30px;\n  background-color: #3f51b542;\n  margin: 20px 30px 30px;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n`;\n\nexport const ImgMovie = styled.img`\n  width: 250px;\n`;\n\nexport const MovieInfo = styled.div`\n  padding-left: 30px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`;\n\nexport const AboutInfo = styled.h3`\n  margin-left: 35px;\n  margin-bottom: 0;\n`;\n\nexport const InfoLink = styled(Link)`\n  color: darkblue;\n  font-weight: 600;\n  \n  &.active {\n    color: orangered;\n    font-weight: 700;\n    transform: scale(1.1);\n  }\n \n`;","import { fetchMovieDetail } from \"ApiFetch\";\nimport { useParams,useLocation, Link, Outlet } from \"react-router-dom\";\nimport {useState, useEffect, useRef} from \"react\"; \n\nimport{MovieContainer,\n    ImgMovie, MovieInfo,AboutInfo, InfoLink\n} from './MovieDetails.styled';\n\n\nconst MovieDetails = ()=> {\n    const {movieId}= useParams();\n    const[movie,setMovie]=useState(null);\n    const location = useLocation();\n const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\nuseEffect(() => {\n  fetchMovieDetail(movieId).then(setMovie)\n}, [movieId]);\n\nconst { poster, title, releaseYear, userScore, overview, genres } =\n    movie ?? {};\n\n\n return (\n<div>\n    <Link to={backLinkLocationRef.current}>Back to movies</Link>\n{movie && (\n    <div>\n<MovieContainer>\n        <ImgMovie src={poster} alt={title} />\n        <MovieInfo> \n            <h2>{title}({releaseYear})</h2>\n        <p>UserScore:{userScore}%</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres.map(({ name }) => name).join(' ')}</p>\n        </MovieInfo>\n    </MovieContainer>  \n\n      <AboutInfo>Additional information</AboutInfo>\n<ul>\n    <li>\n        <InfoLink to={`cast`} state={backLinkLocationRef.current}>Cast</InfoLink>\n    </li>\n    <li> \n        <InfoLink to={`reviews`} state={backLinkLocationRef.current}>Reviews</InfoLink>\n    </li>\n</ul>\n<Outlet/>\n    </div>\n)}\n</div>)}\n\nexport default MovieDetails;"],"names":["axios","api_key","include_adult","IMG_URL","fetchTrending","then","data","results","map","id","title","poster","poster_path","catch","error","console","log","message","fetchMovieDetail","movieId","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","fetchQuerySerch","query","fetchCast","cast","name","character","photo","profile_path","fetchReviews","author","content","MovieContainer","styled","ImgMovie","MovieInfo","AboutInfo","InfoLink","Link","useParams","useState","movie","setMovie","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","to","current","src","alt","join"],"sourceRoot":""}